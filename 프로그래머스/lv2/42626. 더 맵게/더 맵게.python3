import heapq as hq


def solution(scoville, K):
    # 내림차순 정렬 후, heapq!
    scoville.sort()
    hq.heapify(scoville)

    answer = 0
    # 스코빌의 최저치가 k 이하일 동안 반복..
    while scoville[0] <= K:
        
        # [1, 2], 7 일 경우도 있으니까..
        if len(scoville) == 1: return -1

        answer += 1

        # 스코빌에서 첫 번째로 작은 값 + 두 번째로 작은 값 추출 후, pop
        first = hq.heappop(scoville)
        second = hq.heappop(scoville)
        
        # 계산한 결과 힙에 저장
        hq.heappush(scoville, first + (second * 2))

    return answer


# 테스트를 위한 코드입니다.
print(solution([1, 2, 3, 9, 10, 12], 7))
